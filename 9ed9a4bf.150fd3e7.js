(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{103:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return s})),a.d(t,"default",(function(){return p}));var n=a(3),r=a(7),c=(a(0),a(129)),i=["components"],o={id:"external-chaincode-as-a-service",title:"External chaincode as a service"},l={unversionedId:"chaincode-deployment/external-chaincode-as-a-service",id:"chaincode-deployment/external-chaincode-as-a-service",isDocsHomePage:!1,title:"External chaincode as a service",description:"Fabric 2.0 enabled the ability to deploy chaincode as a service. This is a chaincode that runs on a remote machine, container, or baremetal, and the peer will connect to it.",source:"@site/docs/chaincode-deployment/external-chaincode-as-a-service.md",slug:"/chaincode-deployment/external-chaincode-as-a-service",permalink:"/bevel-operator-fabric/docs/chaincode-deployment/external-chaincode-as-a-service",editUrl:"https://github.com/hyperledger/bevel-operator-fabric/edit/master/website/docs/chaincode-deployment/external-chaincode-as-a-service.md",version:"current",sidebar:"someSidebar1",previous:{title:"Getting started",permalink:"/bevel-operator-fabric/docs/chaincode-deployment/getting-started"},next:{title:"Kubernetes chaincode builder",permalink:"/bevel-operator-fabric/docs/chaincode-deployment/k8s-builder"}},s=[{value:"Step 1: Prepare a Docker image for the chaincode",id:"step-1-prepare-a-docker-image-for-the-chaincode",children:[]},{value:"Step 2: Install the chaincode",id:"step-2-install-the-chaincode",children:[]},{value:"Step 3: Deploy the chaincode",id:"step-3-deploy-the-chaincode",children:[]}],d={toc:s};function p(e){var t=e.components,o=Object(r.a)(e,i);return Object(c.b)("wrapper",Object(n.a)({},d,o,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Fabric 2.0 enabled the ability to deploy chaincode as a service. This is a chaincode that runs on a remote machine, container, or baremetal, and the peer will connect to it."),Object(c.b)("p",null,"HLF-operator supports the installation of chaincode as a service, using the ",Object(c.b)("inlineCode",{parentName:"p"},"ccaas")," external builder that Hyperledger Fabric supports out-of-the-box since the version ",Object(c.b)("inlineCode",{parentName:"p"},"2.4.1")),Object(c.b)("p",null,Object(c.b)("img",{alt:"External chaincode as a service",src:a(184).default})),Object(c.b)("h2",{id:"step-1-prepare-a-docker-image-for-the-chaincode"},"Step 1: Prepare a Docker image for the chaincode"),Object(c.b)("p",null,"To deploy the chaincode in Kubernetes, we need to prepare a Docker image that has the chaincode in it."),Object(c.b)("p",null,"You can use the following code as a baseline:\n",Object(c.b)("a",{parentName:"p",href:"https://github.com/hyperledger/fabric-samples/tree/main/chaincode/fabcar/external"},"https://github.com/hyperledger/fabric-samples/tree/main/chaincode/fabcar/external")),Object(c.b)("p",null,"It contains a ",Object(c.b)("inlineCode",{parentName:"p"},"Dockerfile")," and a ",Object(c.b)("inlineCode",{parentName:"p"},"fabcar.go"),", if you build that folder:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-bash"},"docker build -t <username>/chaincode .\n")),Object(c.b)("p",null,"And then push it to Docker Hub:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-bash"},"docker push <username>/chaincode\n")),Object(c.b)("p",null,"You will be able to deploy the chaincode in the step 3"),Object(c.b)("h2",{id:"step-2-install-the-chaincode"},"Step 2: Install the chaincode"),Object(c.b)("p",null,"In this step we will install the chaincode using the ",Object(c.b)("inlineCode",{parentName:"p"},"ccaas")," external builder, telling the address of the chaincode service where the chaincode will be deployed."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-bash"},'# remove the code.tar.gz asset-transfer-basic-external.tgz if they exist\nrm code.tar.gz asset-transfer-basic-external.tgz\nexport CHAINCODE_NAME=asset\nexport CHAINCODE_LABEL=asset\ncat << METADATA-EOF > "metadata.json"\n{\n    "type": "ccaas",\n    "label": "${CHAINCODE_LABEL}"\n}\nMETADATA-EOF\n\ncat > "connection.json" <<CONN_EOF\n{\n  "address": "${CHAINCODE_NAME}:7052",\n  "dial_timeout": "10s",\n  "tls_required": false\n}\nCONN_EOF\n\ntar cfz code.tar.gz connection.json\ntar cfz asset-transfer-basic-external.tgz metadata.json code.tar.gz\nexport PACKAGE_ID=$(kubectl hlf chaincode calculatepackageid --path=asset-transfer-basic-external.tgz --language=node --label=$CHAINCODE_LABEL)\necho "PACKAGE_ID=$PACKAGE_ID"\n\nkubectl hlf chaincode install --path=./asset-transfer-basic-external.tgz \\\n    --config=org1.yaml --language=golang --label=$CHAINCODE_LABEL --user=admin --peer=org1-peer0.default\n\n# this can take 3-4 minutes\n')),Object(c.b)("h2",{id:"step-3-deploy-the-chaincode"},"Step 3: Deploy the chaincode"),Object(c.b)("p",null,"In this last step, we will deploy the chaincode using the ",Object(c.b)("inlineCode",{parentName:"p"},"ccaas")," external builder, specifying the name of the chaincode, which must be the same as we specified in the previous step."),Object(c.b)("p",null,"And we will also specify the image which you have pushed in the first step."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-bash"},"kubectl hlf externalchaincode sync --image=<username>/chaincode:latest \\\n    --name=$CHAINCODE_NAME \\\n    --namespace=default \\\n    --package-id=$PACKAGE_ID \\\n    --tls-required=false \\\n    --replicas=1\n")))}p.isMDXComponent=!0},129:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),d=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=d(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=d(a),b=n,u=p["".concat(i,".").concat(b)]||p[b]||h[b]||c;return a?r.a.createElement(u,o(o({ref:t},s),{},{components:a})):r.a.createElement(u,o({ref:t},s))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,i=new Array(c);i[0]=b;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var s=2;s<c;s++)i[s]=a[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"},184:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/external_chaincode_as_a_service-556456d17367243fdfa997525540a93e.png"}}]);